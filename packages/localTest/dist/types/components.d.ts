/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface FontIcon {
        "config": any;
        "icon": string;
    }
    interface IntButton {
        "logoImage": string;
    }
    interface IntCard {
        "userName": string;
    }
    interface IntNavbar {
        "logoImage": string;
    }
    interface IntSearch {
        "searchText": string;
    }
    interface IntSidebar {
    }
    interface IntSideitem {
        "name": string;
    }
}
declare global {
    interface HTMLFontIconElement extends Components.FontIcon, HTMLStencilElement {
    }
    var HTMLFontIconElement: {
        prototype: HTMLFontIconElement;
        new (): HTMLFontIconElement;
    };
    interface HTMLIntButtonElement extends Components.IntButton, HTMLStencilElement {
    }
    var HTMLIntButtonElement: {
        prototype: HTMLIntButtonElement;
        new (): HTMLIntButtonElement;
    };
    interface HTMLIntCardElement extends Components.IntCard, HTMLStencilElement {
    }
    var HTMLIntCardElement: {
        prototype: HTMLIntCardElement;
        new (): HTMLIntCardElement;
    };
    interface HTMLIntNavbarElement extends Components.IntNavbar, HTMLStencilElement {
    }
    var HTMLIntNavbarElement: {
        prototype: HTMLIntNavbarElement;
        new (): HTMLIntNavbarElement;
    };
    interface HTMLIntSearchElement extends Components.IntSearch, HTMLStencilElement {
    }
    var HTMLIntSearchElement: {
        prototype: HTMLIntSearchElement;
        new (): HTMLIntSearchElement;
    };
    interface HTMLIntSidebarElement extends Components.IntSidebar, HTMLStencilElement {
    }
    var HTMLIntSidebarElement: {
        prototype: HTMLIntSidebarElement;
        new (): HTMLIntSidebarElement;
    };
    interface HTMLIntSideitemElement extends Components.IntSideitem, HTMLStencilElement {
    }
    var HTMLIntSideitemElement: {
        prototype: HTMLIntSideitemElement;
        new (): HTMLIntSideitemElement;
    };
    interface HTMLElementTagNameMap {
        "font-icon": HTMLFontIconElement;
        "int-button": HTMLIntButtonElement;
        "int-card": HTMLIntCardElement;
        "int-navbar": HTMLIntNavbarElement;
        "int-search": HTMLIntSearchElement;
        "int-sidebar": HTMLIntSidebarElement;
        "int-sideitem": HTMLIntSideitemElement;
    }
}
declare namespace LocalJSX {
    interface FontIcon {
        "config"?: any;
        "icon"?: string;
    }
    interface IntButton {
        "logoImage"?: string;
    }
    interface IntCard {
        "userName"?: string;
    }
    interface IntNavbar {
        "logoImage"?: string;
    }
    interface IntSearch {
        "onSearchWoldNameSelected"?: (event: CustomEvent<string>) => void;
        "searchText"?: string;
    }
    interface IntSidebar {
    }
    interface IntSideitem {
        "name"?: string;
        "onHoverItem"?: (event: CustomEvent<any>) => void;
        "onNumberOfClicks"?: (event: CustomEvent<number>) => void;
        "onSelectData"?: (event: CustomEvent<String>) => void;
        "onTodoCompleted"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "font-icon": FontIcon;
        "int-button": IntButton;
        "int-card": IntCard;
        "int-navbar": IntNavbar;
        "int-search": IntSearch;
        "int-sidebar": IntSidebar;
        "int-sideitem": IntSideitem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "font-icon": LocalJSX.FontIcon & JSXBase.HTMLAttributes<HTMLFontIconElement>;
            "int-button": LocalJSX.IntButton & JSXBase.HTMLAttributes<HTMLIntButtonElement>;
            "int-card": LocalJSX.IntCard & JSXBase.HTMLAttributes<HTMLIntCardElement>;
            "int-navbar": LocalJSX.IntNavbar & JSXBase.HTMLAttributes<HTMLIntNavbarElement>;
            "int-search": LocalJSX.IntSearch & JSXBase.HTMLAttributes<HTMLIntSearchElement>;
            "int-sidebar": LocalJSX.IntSidebar & JSXBase.HTMLAttributes<HTMLIntSidebarElement>;
            "int-sideitem": LocalJSX.IntSideitem & JSXBase.HTMLAttributes<HTMLIntSideitemElement>;
        }
    }
}
